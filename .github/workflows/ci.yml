# =============================================================================
# GPT‑Review ▸ Continuous‑Integration Pipeline
# =============================================================================
#
# Jobs
# ----
# 1. **Lint**        – static analysis with flake8 (fast feedback).
# 2. **Unit Tests**  – pytest + coverage on Linux for three CPython versions:
#                      3.10, 3.11, 3.12.
#
# Other workflows
# ---------------
# • End‑to‑End browser smoke test lives in *e2e.yml* and runs separately.
#
# Performance
# -----------
# • pip cache keyed on OS + python‑version + hash of pyproject.toml
# • Concurrency cancels stale runs on same branch / PR.
# • Log groups keep GitHub UI readable.
# =============================================================================

name: CI

on:
  push:
    branches: [ main ]
  pull_request:

# Avoid piling up duplicate CI runs
concurrency:
  group: ci-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

# -----------------------------------------------------------------------------#
#  LINT JOB
# -----------------------------------------------------------------------------#
jobs:
  lint:
    name: "Lint (flake8)"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: "⬇️  Checkout repository"
        uses: actions/checkout@v4

      - name: "🐍  Set up Python 3.12"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: "📦  Restore pip cache"
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-lint-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}

      - name: "📥  Install flake8"
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: "🔎  Run flake8"
        env:
          PY_COLORS: "1"
        run: |
          echo "::group::flake8 output"
          flake8
          echo "::endgroup::"

  # ---------------------------------------------------------------------------#
  #  UNIT‑TEST MATRIX
  # ---------------------------------------------------------------------------#
  test:
    name: "Unit Tests (py${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 25

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: "⬇️  Checkout repository"
        uses: actions/checkout@v4

      - name: "🐍  Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "📦  Restore pip cache"
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: >-
            pip-unit-${{ runner.os }}-py${{ matrix.python-version }}-
            ${{ hashFiles('pyproject.toml') }}

      - name: "📥  Install package with dev extras"
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: "🧪  Run pytest with coverage"
        env:
          PY_COLORS: "1"
        run: |
          echo "::group::pytest"
          coverage run -m pytest -q
          echo "::endgroup::"
          coverage report -m

      - name: "📊  Add coverage to job summary (3.12 only)"
        if: matrix.python-version == '3.12'
        run: |
          echo '### Coverage report (Python 3.12)' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          coverage report -m >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
