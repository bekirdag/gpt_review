# =============================================================================
# Continuous‑Integration workflow for GPT‑Review
# =============================================================================
#
# Jobs included
# -------------
# 1. **Lint**      – flake8 on all Python sources.
# 2. **Unit‑Test** – pytest + coverage on Linux, Python 3.10 · 3.11 · 3.12.
# 3. **E2E Smoke** – starts a headless Chromium with Selenium to verify that
#                    webdriver‑manager can download a matching chromedriver.
#
# The workflow is chatty by design – each major step prints a short banner
# so that GitHub’s log UI remains readable.
#
# Caching
# -------
#   pip dependencies are cached per `python‑version` + `hash(requirements)`.
#
# Concurrency
# -----------
#   One run per branch/PR; newer pushes cancel in‑flight CI to save minutes.
# =============================================================================

name: CI

on:
  push:
  pull_request:

concurrency:
  group: ci-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  # ---------------------------------------------------------------------------
  # LINT JOB – quick feedback (< 30 s)
  # ---------------------------------------------------------------------------
  lint:
    name: "Lint (flake8)"
    runs-on: ubuntu-latest
    steps:
      - name: "⬇️  Checkout code"
        uses: actions/checkout@v4

      - name: "🐍  Set up Python 3.12"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: "📦  Cache pip"
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: >-
            pip-${{ runner.os }}-py312-
            ${{ hashFiles('pyproject.toml') }}

      - name: "📥  Install flake8"
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: "🔎  Run flake8"
        run: |
          echo "::group::flake8 output"
          flake8
          echo "::endgroup::"

  # ---------------------------------------------------------------------------
  # UNIT‑TEST JOB – matrix of Python versions
  # ---------------------------------------------------------------------------
  test:
    name: "Unit Tests (pytest)"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: "⬇️  Checkout code"
        uses: actions/checkout@v4

      - name: "🐍  Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "📦  Cache pip"
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: >-
            pip-${{ runner.os }}-py${{ matrix.python-version }}-
            ${{ hashFiles('pyproject.toml') }}

      - name: "📥  Install package with dev extras"
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]          # installs pytest, coverage, etc.

      - name: "🧪  Run pytest + coverage"
        env:
          PY_COLORS: "1"
        run: |
          echo "::group::pytest"
          coverage run -m pytest -q
          coverage report -m
          echo "::endgroup::"

      - name: "⬆️  Upload coverage to job summary"
        if: matrix.python-version == '3.12'
        run: |
          echo '```' >> $GITHUB_STEP_SUMMARY
          coverage report -m >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  # ---------------------------------------------------------------------------
  # END‑TO‑END SMOKE – real browser launch (single Python version)
  # ---------------------------------------------------------------------------
  e2e:
    name: "E2E Smoke Test (headless Selenium)"
    runs-on: ubuntu-latest
    needs: test       # only run if unit tests succeed
    steps:
      - name: "⬇️  Checkout code"
        uses: actions/checkout@v4

      - name: "🐍  Set up Python 3.12"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: "📦  Cache pip"
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: >-
            pip-${{ runner.os }}-e2e-
            ${{ hashFiles('pyproject.toml') }}

      - name: "📥  Install package"
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: "🖥️  Install Chromium & Xvfb"
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends chromium-browser xvfb

      - name: "🚀  Launch Selenium (xvfb‑run)"
        run: |
          xvfb-run -a python - <<'PY'
          from review import _chrome_driver
          drv = _chrome_driver()
          print("[E2E] Browser capabilities:", drv.capabilities["browserVersion"])
          drv.quit()
          PY
