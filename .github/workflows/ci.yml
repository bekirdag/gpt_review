# =============================================================================
# GPT‚ÄëReview ‚ñ∏ Continuous‚ÄëIntegration Pipeline
# =============================================================================
#
# Jobs
# ----
# 1. **Lint (pre‚Äëcommit)** ‚Äì run all configured hooks (isort ‚Üí black ‚Üí flake8,
#    codespell, JSON/YAML checks, etc.) for fast, comprehensive feedback.
# 2. **Unit Tests** ‚Äì pytest + coverage on Linux for three CPython versions:
#    3.10, 3.11, 3.12.
#
# Observability
# -------------
# ‚Ä¢ On Python 3.12, append coverage and a Changelog excerpt (Unreleased or the
#   latest release) to the **Job Summary** for quick PR review.
#
# Other workflows
# ---------------
# ‚Ä¢ End‚Äëto‚ÄëEnd browser smoke test lives in *e2e.yml* and runs separately.
#
# Performance
# -----------
# ‚Ä¢ Built‚Äëin pip cache via setup‚Äëpython.
# ‚Ä¢ Pre‚Äëcommit cache keyed on OS + .pre-commit-config.yaml hash.
# ‚Ä¢ Concurrency cancels stale runs on same branch / PR.
# ‚Ä¢ Log groups keep GitHub UI readable.
# =============================================================================

name: CI

on:
  push:
    branches: [ main ]
  pull_request:

# Avoid piling up duplicate CI runs
concurrency:
  group: ci-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

# -----------------------------------------------------------------------------#
#  LINT JOB (pre‚Äëcommit)
# -----------------------------------------------------------------------------#
jobs:
  lint:
    name: "Lint (pre‚Äëcommit)"
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: "‚¨áÔ∏è  Checkout repository"
        uses: actions/checkout@v4

      - name: "üêç  Set up Python¬†3.12"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: "üíæ  Restore pre‚Äëcommit cache"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: precommit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: "üì•  Install pre‚Äëcommit"
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: "üßπ  Run pre‚Äëcommit hooks"
        env:
          PY_COLORS: "1"
        run: |
          echo "::group::pre-commit"
          pre-commit run --all-files --show-diff-on-failure
          echo "::endgroup::"

  # ---------------------------------------------------------------------------#
  #  UNIT‚ÄëTEST MATRIX
  # ---------------------------------------------------------------------------#
  test:
    name: "Unit Tests (py${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 25

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: "‚¨áÔ∏è  Checkout repository"
        uses: actions/checkout@v4

      - name: "üêç  Set up Python¬†${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: "üì•  Install package with dev extras"
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: "üß™  Run pytest with coverage"
        env:
          PY_COLORS: "1"
        run: |
          echo "::group::pytest"
          coverage run -m pytest -q
          echo "::endgroup::"
          coverage report -m

      - name: "üìä  Add coverage to job summary (3.12 only)"
        if: matrix.python-version == '3.12'
        run: |
          {
            echo '### Coverage report (Python 3.12)';
            echo '```';
            coverage report -m;
            echo '```';
          } >> "$GITHUB_STEP_SUMMARY"

      # --------------------------------------------------------------------- #
      # Changelog excerpt (Unreleased or latest) ‚Üí Job Summary, 3.12 only
      # --------------------------------------------------------------------- #
      - name: "üìù  Append changelog excerpt to summary (3.12 only)"
        if: matrix.python-version == '3.12'
        run: |
          echo "::group::changelog-summary"
          python - <<'PY'
          import os, re, pathlib, sys
          p = pathlib.Path("CHANGELOG.md")
          if not p.exists():
              print("CHANGELOG.md not found", file=sys.stderr)
              sys.exit(0)  # don't fail the job; just skip

          text = p.read_text(encoding="utf-8")

          # Prefer the Unreleased section; otherwise fall back to the first release entry.
          m = re.search(r"^##\s+\[Unreleased\].*?(?=^##\s+\[|\Z)", text, re.M | re.S)
          if not m:
              m = re.search(r"^##\s+\[[^\]]+\].*?(?=^##\s+\[|\Z)", text, re.M | re.S)

          if not m:
              print("No sections matched in CHANGELOG.md; skipping.")
              sys.exit(0)

          # Append to GitHub Job Summary
          summary = os.environ.get("GITHUB_STEP_SUMMARY")
          if summary:
              with open(summary, "a", encoding="utf-8") as fh:
                  fh.write("\n### Changelog excerpt\n\n")
                  fh.write(m.group(0).strip() + "\n")
          print("Changelog excerpt appended to Job Summary.")
          PY
          echo "::endgroup::"
