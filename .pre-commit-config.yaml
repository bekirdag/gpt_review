###############################################################################
# GPT‑Review ▸ Pre‑Commit Hook Configuration
###############################################################################
# Why use pre‑commit?
# -------------------
# • Ensures that every commit is auto‑formatted (Black/isort) and lint‑clean
#   (flake8) before it reaches the remote repository.
# • Adds safety checks for JSON/YAML/TOML, merge conflicts, large files, etc.
# • Keeps CI and local developer environments consistent.
#
# Hook ordering (top to bottom):
#   1) isort  – reorder imports
#   2) black  – format code
#   3) flake8 – lint after formatting
#   4) misc sanity checks (whitespace, EOF, conflicts, JSON/YAML/TOML, …)
#   5) codespell – docs/comments typos
###############################################################################

repos:
  # ---------------------------------------------------------------------------
  # 1) isort – import sorting (run *before* Black)
  # ---------------------------------------------------------------------------
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: "isort – import order sorter"
        additional_dependencies: ["isort[colors]"]

  # ---------------------------------------------------------------------------
  # 2) Black – uncompromising Python code formatter
  #    NOTE: Removed the invalid '--safe' arg; Black reads config from pyproject.
  # ---------------------------------------------------------------------------
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        name: "Black – Python code formatter"
        language_version: python3

  # ---------------------------------------------------------------------------
  # 3) flake8 – static analysis / lint
  # ---------------------------------------------------------------------------
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: "flake8 – style & quality"
        additional_dependencies:
          - flake8-bugbear
          - flake8-bandit
        # Colourful output when run manually
        args: ["--color", "always"]

  # ---------------------------------------------------------------------------
  # 4) pre‑commit-hooks – universal sanity checks
  #    (JSON/YAML/TOML validation, whitespace, conflicts, etc.)
  # ---------------------------------------------------------------------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: end-of-file-fixer           # ensure \n at EOF
      - id: trailing-whitespace         # strip trailing spaces/tabs
      - id: mixed-line-ending           # normalise to LF
        args: ["--fix=lf"]
      - id: check-added-large-files     # warn on >500 KB blobs
      - id: check-merge-conflict        # reject leftover conflict markers
      - id: check-yaml                  # validate .yml/.yaml files
      - id: check-json                  # validate .json files
      - id: pretty-format-json          # auto-format JSON without reordering keys
        args: ["--autofix", "--no-ensure-ascii", "--indent", "2", "--no-sort-keys"]
      - id: check-toml                  # validate pyproject.toml and others
      - id: check-case-conflict         # case-insensitive filename collisions
      - id: check-symlinks              # detect broken symlinks
      - id: check-executables-have-shebangs
      - id: detect-private-key          # accidental private keys in tree

  # ---------------------------------------------------------------------------
  # 5) codespell – simple typo checker (docs & comments)
  # ---------------------------------------------------------------------------
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.0
    hooks:
      - id: codespell
        name: "codespell – spell checker"
        args:
          - "--ignore-words-list=te,ht"
          - "--skip=*.png,*.svg"
