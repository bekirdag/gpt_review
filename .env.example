###############################################################################
# GPT‑Review ▸ Example environment file
###############################################################################
# Copy this file to `.env` in the project root and customise as needed.
# Most shells will export these variables when you run:
#     set -a; . ./.env; set +a
#
# Overview
# --------
# • First‑time login helper (`cookie_login.sh`) opens:
#     - Primary tab:  $GPT_REVIEW_LOGIN_URL      (default: https://chatgpt.com/)
#     - Fallback tab: https://chat.openai.com/   (deduped if identical)
#   Your cookies are persisted in the Chrome profile directory.
#
# • The browser‑driven review loop (`gpt-review` / `review.py`) prefers:
#     - $GPT_REVIEW_CHAT_URL for navigation (default: https://chatgpt.com/)
#       with an automatic fallback to https://chat.openai.com/
#
# • You can explicitly point to a Chrome/Chromium binary with $CHROME_BIN.
#
# • NEW: API mode (`--mode api` or wrapper `--api`) uses the OpenAI API instead
#   of opening a browser. See the "API (no browser)" section below.
###############################################################################

# ---------------------------------------------------------------------------
#  Browser profile (cookies & cache)
# ---------------------------------------------------------------------------
# Default: ~/.cache/gpt-review/chrome
# Keep this directory between runs so you only log in once.
#GPT_REVIEW_PROFILE="$HOME/.cache/gpt-review/chrome"

# ---------------------------------------------------------------------------
#  Browser choice
# ---------------------------------------------------------------------------
# Explicit browser binary (auto-detected if unset):
#   • Debian/Ubuntu:  /usr/bin/chromium
#   • macOS (Chrome): /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome
#   • macOS (Chromium): /Applications/Chromium.app/Contents/MacOS/Chromium
#CHROME_BIN="/usr/bin/chromium"

# ---------------------------------------------------------------------------
#  ChatGPT URLs (driver vs. login helper)
# ---------------------------------------------------------------------------
# Driver preferred domain (Selenium navigation); fallback to chat.openai.com is automatic.
#GPT_REVIEW_CHAT_URL="https://chatgpt.com/"

# Primary URL for the *login helper* (cookie_login.sh). A fallback tab for chat.openai.com
# is always opened unless this is already that domain.
#GPT_REVIEW_LOGIN_URL="https://chatgpt.com/"

# ---------------------------------------------------------------------------
#  Headless mode (browser mode only)
# ---------------------------------------------------------------------------
# Any non-empty value enables Chromium’s new headless mode.
# Useful for CI / Docker. (Default ON inside Docker image.)
#GPT_REVIEW_HEADLESS=1

# ---------------------------------------------------------------------------
#  Timeouts & retries
# ---------------------------------------------------------------------------
# Maximum seconds to wait for UI/replies (default: 90).
#GPT_REVIEW_WAIT_UI=90
# Inactivity (seconds) to consider streaming finished (default: 2).
#GPT_REVIEW_STREAM_IDLE_SECS=2
# Number of retries for brittle browser actions (default: 3).
#GPT_REVIEW_RETRIES=3
# Command timeout in seconds; same as `--timeout` CLI flag (default: 300).
#GPT_REVIEW_COMMAND_TIMEOUT=300

# ---------------------------------------------------------------------------
#  Error‑log chunking
# ---------------------------------------------------------------------------
# Maximum characters per error‑log chunk (default: 15000).
# Larger values risk exceeding ChatGPT’s token limit.
#GPT_REVIEW_CHUNK_SIZE=15000

# ---------------------------------------------------------------------------
#  Logging
# ---------------------------------------------------------------------------
# Directory for rotating log files (relative or absolute).
#GPT_REVIEW_LOG_DIR="logs"
# Console log level: DEBUG | INFO | WARNING | ERROR | CRITICAL
#GPT_REVIEW_LOG_LVL="INFO"
# Rotation schedule for file logs (see Python TimedRotatingFileHandler docs),
# common values: "midnight", "H", "M".
#GPT_REVIEW_LOG_ROT="midnight"
# Number of backup files to keep (default: 7).
#GPT_REVIEW_LOG_BACK=7
# Timestamp format: set to 1 to switch console timestamps to UTC.
#GPT_REVIEW_LOG_UTC=1
# Emit JSON lines to console (useful for CI/log scraping); set to 1 to enable.
#GPT_REVIEW_LOG_JSON=1

# ---------------------------------------------------------------------------
#  Network proxy (optional)
# ---------------------------------------------------------------------------
# If your environment requires a proxy for webdriver-manager downloads or
# general network access, set these before running the tool.
#HTTPS_PROXY="http://proxy.example.com:3128"
#HTTP_PROXY="$HTTPS_PROXY"

# ---------------------------------------------------------------------------
#  Misc
# ---------------------------------------------------------------------------
# Set PYTHONUNBUFFERED for immediate log flushing in some shells/CI.
#PYTHONUNBUFFERED=1

###############################################################################
# API (no browser) – OpenAI settings
###############################################################################
# REQUIRED for --mode api / wrapper --api
# Your OpenAI API key (or a compatible gateway key).
#OPENAI_API_KEY="sk-..."

# Optional: override the base URL to use a proxy / private gateway.
#OPENAI_BASE_URL="https://api.openai.com/v1"

# Default model for API mode (can be overridden with --model on the CLI
# or the wrapper's --model flag).
#GPT_REVIEW_MODEL="gpt-5-pro"

# Keep conversation small: number of *turn pairs* (user+assistant) to retain
# after the initial system+instructions messages. Lower = cheaper context.
#GPT_REVIEW_CTX_TURNS=6

# When sending failing logs back to the model, include only the tail to reduce
# tokens. Increase if your tests produce shorter logs and you want more context.
#GPT_REVIEW_LOG_TAIL_CHARS=20000

# Per-request timeout for API calls in seconds.
#GPT_REVIEW_API_TIMEOUT=120
